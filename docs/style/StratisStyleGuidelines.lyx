#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Stratis Coding Style Guidelines
\end_layout

\begin_layout Date
Last modified: 02/27/2018
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Section*
Asking Questions and Making Changes to this Document
\end_layout

\begin_layout Standard
This document can be found 
\begin_inset CommandInset href
LatexCommand href
name "in the stratis-docs repo"
target "https://github.com/stratis-storage/stratis-docs/blob/master/docs/style/StratisStyleGuidelines.lyx"
literal "false"

\end_inset

, and is written using \SpecialChar LyX
 2.2.2.
 Please ask any questions by opening an issue, and propose changes as pull
 requests.
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
A consistent style helps legibility and saves developers from needing to
 think about issues that are not really important.
\end_layout

\begin_layout Standard
For both Rust and Python, there are standard coding conventions, as well
 as tools that help keep code consistent with these conventions that we
 will try to use as much as possible.
 There are also some additional project-specific style guidelines, which
 we will document here to help developers new to the project.
\end_layout

\begin_layout Section
Style (Rust)
\end_layout

\begin_layout Enumerate
rustfmt (
\begin_inset CommandInset href
LatexCommand href
name "link"
target "https://crates.io/crates/rustfmt"
literal "false"

\end_inset

) defines spacing, brace placement, and other formatting, and should be
 followed (or automatically applied) for new Stratis code.
\end_layout

\begin_layout Enumerate
All new files must start with the 3-line license as a comment.
\end_layout

\begin_layout Enumerate
Ordering of 
\begin_inset Quotes eld
\end_inset

use
\begin_inset Quotes erd
\end_inset

 declarations
\end_layout

\begin_deeper
\begin_layout Enumerate
\begin_inset Quotes eld
\end_inset

use
\begin_inset Quotes erd
\end_inset

 declarations within a module (such as a source file) should be grouped
 into up to four sections:
\end_layout

\begin_deeper
\begin_layout Enumerate
declarations from 
\begin_inset Quotes eld
\end_inset

std
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Enumerate
declarations from other external dependencies except for devicemapper
\end_layout

\begin_layout Enumerate
devicemapper dependencies
\end_layout

\begin_layout Enumerate
declarations from other modules in the same crate
\end_layout

\begin_layout Standard
as needed, separated by blank lines.
 Ordering within blocks is alphabetical.
\end_layout

\end_deeper
\begin_layout Enumerate
When importing multiple items from a module, group these with 
\begin_inset Quotes eld
\end_inset

{}
\begin_inset Quotes erd
\end_inset

 on a single line.
 The items should be ordered alphabetically.
\end_layout

\end_deeper
\begin_layout Enumerate
Use 
\begin_inset Quotes eld
\end_inset

expect()
\begin_inset Quotes erd
\end_inset

 instead of 
\begin_inset Quotes eld
\end_inset

unwrap()
\begin_inset Quotes erd
\end_inset

 to unwrap things that should always succeed.
 
\begin_inset Quotes eld
\end_inset

unwrap()
\begin_inset Quotes erd
\end_inset

 is not allowed in new code.
\end_layout

\begin_deeper
\begin_layout Enumerate
Output from Linux kernel APIs is considered 
\begin_inset Quotes eld
\end_inset

super-stable
\begin_inset Quotes erd
\end_inset

 and should be 
\begin_inset Quotes eld
\end_inset

expect
\begin_inset Quotes erd
\end_inset

ed instead of returning a parse error.
\end_layout

\begin_layout Enumerate
\begin_inset Quotes eld
\end_inset

expect()
\begin_inset Quotes erd
\end_inset

 text should say what 
\begin_inset Quotes eld
\end_inset

should never fail
\begin_inset Quotes erd
\end_inset

 condition was not met to trigger it.
\end_layout

\end_deeper
\begin_layout Enumerate
When implementing a trait, the methods should be ordered as they are ordered
 in the trait definition.
\end_layout

\begin_layout Enumerate
TBD: Recommendations on when it's time to break up a single module (file)
 into submodules
\end_layout

\begin_layout Enumerate
TBD: Recommendations on when to define const variables versus when to use
 string literals
\end_layout

\begin_layout Subsection
Conventions (stratisd)
\end_layout

\begin_layout Enumerate
Stratisd has many instances of ranges of storage being allocated from other
 things.
 This can become confusing.
 In naming methods that relate to this, use the following conventions:
\end_layout

\begin_deeper
\begin_layout Enumerate
A method that attempts to allocate some number of unit of storage from an
 allocation pool container should be called 
\begin_inset Quotes eld
\end_inset

alloc
\begin_inset Quotes erd
\end_inset

 if the method returns an error if the entire amount requested is not available.
 If a method returns a partial allocation if the entire amount is not available,
 it should be called 
\begin_inset Quotes eld
\end_inset

request
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Enumerate
A method returning the total amount of storage units (i.e.
 sectors, DataBlocks, or similar) in an allocation pool should be called
 
\begin_inset Quotes eld
\end_inset

size
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Enumerate
A method returning the total 
\emph on
usable
\emph default
 amount of storage units – the total number minus overhead (if any) – in
 an allocation pool should be called 
\begin_inset Quotes eld
\end_inset

usable
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

usable_size
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Enumerate
A method returning the number of previously-unallocated storage units should
 be called 
\begin_inset Quotes eld
\end_inset

available
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

avail_size
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Enumerate
A method returning the number of allocated storage units should be called
 
\begin_inset Quotes eld
\end_inset

allocated
\begin_inset Quotes erd
\end_inset

.
\end_layout

\end_deeper
\begin_layout Section
Style (Python)
\end_layout

\begin_layout Enumerate
Follow PEP 8 (
\begin_inset CommandInset href
LatexCommand href
name "link"
target "https://www.python.org/dev/peps/pep-0008/"
literal "false"

\end_inset

).
\end_layout

\begin_layout Enumerate
Minimum supported Python version is 3.4.
\end_layout

\begin_layout Enumerate
Use list comprehensions instead of for-loops when possible.
 In places where they can be used, comprehensions more clearly communicate
 the code's intent to filter and/or map a list into another list.
 Same goes for generator, dict, and set comprehensions.
\end_layout

\begin_layout Enumerate
Do not use boolean overloading in conditionals unless the type of the object
 is unknown.
 If the type of the object is known, use an explicit comparison such as
 
\begin_inset Quotes eld
\end_inset

is None
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

== []
\begin_inset Quotes erd
\end_inset

.
 This way, if an object of an unexpected type arrives, the comparison will
 generate an error instead of a latent bug.
\end_layout

\begin_layout Enumerate
Use os.path methods when assembling or deconstructing paths.
 We are not concerned with cross-platform usage, so this is for clarity,
 to make it clear that it's a path, not a string.
\end_layout

\end_body
\end_document
